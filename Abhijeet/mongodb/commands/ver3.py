#!/usr/bin/python

mongodbmetrics_ServerStatus=[
	{
		'param' : ['asserts','msg'],
		'name' : 'asserts_msg',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().asserts.msg)"| awk "NR>=3 {print}"',
		'description' : 'Number of message assertions raised during the selected time period',
		'type' : 'gauge'		
	},

	{
		'param' : ['asserts','warning'],
		'name' : 'asserts_warning',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().asserts.warning)"| awk "NR>=3 {print}"',
		'description' : 'Number of warning assertions raised during the selected time period',
		'type' : 'gauge'		
	},

	{
		'param' : ['asserts','regular'],
		'name' : 'asserts_regular',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().asserts.regular)"| awk "NR>=3 {print}"',
		'description' : 'Number of regular assertions raised during the selected time period',
		'type' : 'gauge'
	},

	{
		'param' : ['asserts','user'],
		'name' : 'asserts_user',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().asserts.user)"| awk "NR>=3 {print}"',
		'description' : 'Number of assertions corresponding to errors generated by users during the selected time period',
		'type' : 'gauge'
	},

	{
		'param' : ['globalLock','currentQueue','readers'],
		'name' : 'globalLock_currentQueue',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().globalLock.currentQueue.readers)"| awk "NR>=3 {print}"',
		'description' : 'Number of read requests currently queued',
		'type' : 'gauge'
	},

	{
		'param' : ['globalLock','currentQueue','writers'],
		'name' : 'globalLock_currentQueue_writers',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().globalLock.currentQueue.writers)"| awk "NR>=3 {print}"',
		'description' : 'Number of write requests currently queued',
		'type' : 'gauge'
	},

	{
		'param' : ['wiredTiger','cache','bytes currently in the cache'],
		'name' : 'wiredTiger_cache_bytes_currently_in_the_cache',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.cache.bytes currently in the cache)"| awk "NR>=3 {print}"',
		'description' : 'Amount of space taken by cached data (bytes)',
		'type' : 'gauge'
	},

	{
		'param' : ['wiredTiger','cache','maximum bytes configured'],
		'name' : 'wiredTiger_cache_maximum_bytes_configured',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.cache.maximum bytes configured)"| awk "NR>=3 {print}"',
		'description' : 'Maximum cache size configured (bytes)',
		'type' : 'gauge'
	},

	{
		'param' : ['wiredTiger','cache','tracked dirty bytes in the cache'],
		'name' : 'wiredTiger_cache_tracked_dirty_bytes_in_the_cache',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.cache.tracked dirty bytes in the cache)"| awk "NR>{print}"',
		'description' : 'Amount of space taken by dirty data in the cache (bytes)',
		'type' : 'gauge'
	},

	{
		'param' : ['wiredTiger','cache','unmodified pages evicted'],
		'name' : 'wiredTiger_cache_unmodified_pages_evicted',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.cache.unmodified pages evicted)"| awk "NR>=3 {print}"',
		'description' : 'Number of pages unmodified evicted from the cache',
		'type' : 'gauge'
	},

	{
		'param' : ['wiredTiger','cache','modified pages evicted'],
		'name' : 'wiredTiger_cache_wiredTiger_cache_modified_pages_evicted',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.cache.modified pages evicted)"| awk "NR>=3 {print}"',
		'description' : 'Number of pages modified evicted from the cache',
		'type' : 'gauge'
	},

	{
		'param' : ['mem','virtual'],
		'name' : 'mem_virtual',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().mem.virtual)"| awk "NR>=3 {print}"',
		'description' : 'Virtual memory usage (MB)',
		'type' : 'gauge'
	},

	{
		'param' : ['mem','resident'],
		'name' : 'mem_resident',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().mem.resident)"| awk "NR>=3 {print}"',
		'description' : 'Amount of memory used by the database process (MB)',
		'type' : 'gauge'
	},

	{
		'param' : ['extra_info','page_faults'],
		'name' : 'extra_info_page_faults',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().extra_info.page_faults)"| awk "NR>=3 {print}"',
		'description' : 'Number of times MongoDB had to request from disk (per second)',
		'type' : 'gauge'
	},

	{
		'param' : ['connections','current'],
		'name' : 'connections_current',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().connections.current)"| awk "NR>=3 {print}"',
		'description' : 'Number of clients currently connected to the database server',
		'type' : 'gauge'
	},

	{
		'param' : ['connections','available'],
		'name' : 'connections_available',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().connections.available)"| awk "NR>=3 {print}"',
		'description' : 'Number of unused connections available for new clients',
		'type' : 'gauge'
	},

	{
		'param' : ['metrics','cursor','open','total'],
		'name' : 'metrics_cursor_open_total',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().metrics.cursor.open.total)"| awk "NR>=3 {print}"',
		'description' : 'Number of cursors currently opened by MongoDB for clients',
		'type' : 'gauge'
	},

	{
		'param' : ['metrics','cursor','timedOut'],
		'name' : 'metrics_cursor_timedOut',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().metrics.cursor.timedOut)"| awk "NR>=3 {print}"',
		'description' : 'Number of cursors that have timed out during the selected time period',
		'type' : 'gauge'
	},

	{
		'param' : ['metrics','cursor','open','noTimeout'],
		'name' : 'metrics_cursor_open_noTimeout',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().metrics.cursor.open.noTimeout)"| awk "NR>=3 {print}"',
		'description' : 'The number of open cursors with timeout disabled',
		'type' : 'gauge'
	},

	{
		'param' : ['wiredTiger','concurrentTransactions','read','out'],
		'name' : 'wiredTiger_concurrentTransactions_read_out',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.concurrentTransactions.read.out)"| awk "NR>=3 {print}"',
		'description' : 'Number of read tickets in use',
		'type' : 'gauge'
	},


	{
		'param' : ['wiredTiger','concurrentTransactions','write','out'],
		'name' : 'wiredTiger_concurrentTransactions_write_out',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.concurrentTransactions.write.out)"| awk "NR>=3 {print}"',
		'description' : 'Number of write tickets in use',
		'type' : 'gauge'
	},

	{
		'param' : ['wiredTiger','concurrentTransactions','read','available'],
		'name' : 'wiredTiger_concurrentTransactions_read_available',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.concurrentTransactions.read.available)"| awk "NR>=3 {print}"',
		'description' : 'Number of available read tickets remaining',
		'type' : 'gauge'
	},

	{
		'param' : ['wiredTiger','concurrentTransactions','write','available'],
		'name' : 'wiredTiger_concurrentTransactions_write_available',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().wiredTiger.concurrentTransactions.write.available)"| awk "NR>=3 {print}"',
		'description' : 'Number of available write tickets remaining',
		'type' : 'gauge'
	},

	{
		'param' : ['globalLock','activeClients','writers'],
		'name' : 'globalLock_activeClients_writers',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().globalLock.activeClients.writers)"| awk "NR>=3 {print}"',
		'description' : 'Number of clients with write operations in progress or queued',
		'type' : 'gauge'
	},

	{
		'param' : ['globalLock','activeClients','readers'],
		'name' : 'globalLock_activeClients_readers',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().globalLock.activeClients.readers)"| awk "NR>=3 {print}"',
		'description' : 'Number of clients with read operations in progress or queued',
		'type' : 'gauge'
	},

	{
		'param' : ['opcounters','delete'],
		'name' : 'opcounters_delete',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().opcounters.delete)"| awk "NR>=3 {print}"',
		'description' : 'Number of write requests received during the selected time period (delete)',
		'type' : 'gauge'
	},

	{
		'param' : ['opcounters','update',],
		'name' : 'opcounters_update',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().opcounters.update)"| awk "NR>=3 {print}"',
		'description' : 'Number of write requests received during the selected time period (update)',
		'type' : 'gauge'
	},

	{
		'param' : ['opcounters','insert',],
		'name' : 'opcounters_insert',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().opcounters.insert)"| awk "NR>=3 {print}"',
		'description' : 'Number of write requests received during the selected time period (insert)',
		'type' : 'gauge'
	},

	{
		'param' : ['opcounters','query',],
		'name' : 'opcounters_query',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().opcounters.query)"| awk "NR>=3 {print}"',
		'description' : 'Number of read requests received during the selected time period (query)',
		'type' : 'gauge'
	},
		
	{
		'param' : ['opcounters','getmore',],
		'name' : 'opcounters_getmore',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.serverStatus().opcounters.getmore)"| awk "NR>=3 {print}"',
		'description' : 'Number of read requests received during the selected time period (getmore)',
		'type' : 'gauge'
	},



	
]

mongodbmetrics_dbstats=[

	{
		'param' : ['objects'],
		'name' : 'objects',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.stats().objects)"| awk "NR>=3 {print}"',
		'description' : 'Number of objects (documents) among all the collections',
		'type' : 'gauge'
	},
		
	{
		'param' : ['dataSize'],
		'name' : 'dataSize',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.stats().dataSize)"| awk "NR>=3 {print}"',
		'description' : 'Size of all documents (bytes)',
		'type' : 'gauge'
	},

	{
		'param' : ['indexSize'],
		'name' : 'indexSize',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.stats().indexSize)"| awk "NR>=3 {print}"',
		'description' : 'Size of all indexes (bytes)',
		'type' : 'gauge'
	},

	{
		'param' : ['storageSize'],
		'name' : 'storageSize',
		'datatype' : 'float',
		'command' : 'mongo dbname --eval "printjson(db.stats().storageSize)"| awk "NR>=3 {print}"',
		'description' : 'Size of all extents (bytes)',
		'type' : 'gauge'
	},


]
